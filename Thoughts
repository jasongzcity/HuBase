This file is records a brief schedule of the project and some ramdom thoughts during my reading & coding.

2017-02-06 
I have finished reading chapter 1-5 of book Database System Implementation and the OS-layer code of SQLite3. 
I was about to implement HuBase's OS-layer first. 
However,the OS-layer has to cooperate with the "pager"(so-called in SQLite) closely and I am not familiar 
with that part enough. So I will first write down the interfaces of OS-layer and implement later.

2017-02-08
I have written down some simple interfaces for the OS layer but haven't implement it yet. 
The OS layer should understand different locks. So I am reading the lock mechanism on Linux 
and the source code of "Pager" layer of SQLite3.

2017-02-17
I have figured out the basic structure and principle of the pager layer
of sqlite3. Surprisingly, sqlite does NOT support concurrent writers. So 
the writers will queue up. And the granularity of the lock is the whole database
file. So massive write actions will definitely affect the performance of sqlite.

However, these simple strategies have also brought huge advantages:
1. No need to worry about the annoying deadlock problems since there is only one writer.
2. the one-file granularity lock makes the concurrency control much easier to implement.

2017-02-20
Sqlite journal is just like undo log. It does not recover commited transactions!
I am considering the data & file organizations of HuBase. And the "back-end"
of this database will be finished soon ( though it must also be buggy :-) ).
